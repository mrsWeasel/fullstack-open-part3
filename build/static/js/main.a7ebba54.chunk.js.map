{"version":3,"sources":["services/persons.js","components/personForm.js","components/filteringForm.js","components/persons.js","components/notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","person","post","id","delete","updatedPerson","console","log","put","PersonForm","props","labelStyles","display","inputStyles","width","padding","boxSizing","marginBottom","borderColor","borderWidth","borderBottomWidth","handleAddNewPerson","handleSetNewName","handleSetNewPhonenumber","newName","newPhonenumber","onSubmit","style","value","onChange","type","FilteringForm","Persons","persons","showPerson","deletePerson","containerStyles","paragraphStyles","flexGrow","margin","buttonStyles","boldStyles","fontWeight","map","name","key","number","onClick","Notification","message","backgroundColor","styles","position","bottom","left","right","borderRadius","transition","App","useState","setPersons","setNewName","setNewPhonenumber","filteringCondition","setFilteringCondition","status","setStatus","useEffect","personService","then","response","data","fontFamily","maxWidth","event","preventDefault","find","p","window","confirm","trim","setTimeout","catch","error","newPerson","concat","target","toLowerCase","includes","filter","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7ebba54.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = person => {\n    return axios.post(baseUrl, person)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, updatedPerson) => {\n    console.log(`${baseUrl}/${id}`)\n    return axios.put(`${baseUrl}/${id}`, updatedPerson)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst PersonForm = props => {\n  const labelStyles = {\n    display: 'block'\n  }\n\n  const inputStyles = {\n    display: 'block',\n    width: '100%',\n    padding: 8,\n    boxSizing: 'border-box',\n    marginBottom: 16,\n    borderColor: '#333',\n    borderWidth: 0,\n    borderBottomWidth: 1\n  }\n\n  const {\n    handleAddNewPerson,\n    handleSetNewName,\n    handleSetNewPhonenumber,\n    newName,\n    newPhonenumber,\n  } = props\n\n  return (\n    <form onSubmit={handleAddNewPerson}>\n      <div>\n        <label style={labelStyles}>\n          Name: <input style={inputStyles} value={newName} onChange={handleSetNewName} />\n        </label>\n\n        <label style={labelStyles}>\n          Number:{' '}\n          <input style={inputStyles} value={newPhonenumber} onChange={handleSetNewPhonenumber} />\n        </label>\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst FilteringForm = ({ value, onChange }) => {\n  const labelStyles = {\n    display: 'block'\n  }\n\n  const inputStyles = {\n    display: 'block',\n    width: '100%',\n    padding: 8,\n    boxSizing: 'border-box',\n    marginBottom: 24,\n    borderColor: '#333',\n    borderWidth: 0,\n    borderBottomWidth: 1\n  }\n\n  return (\n    <div>\n      <label style={labelStyles}>\n        Filter shown with: <input style={inputStyles} value={value} onChange={onChange} />\n      </label>\n    </div>\n  )\n}\n\nexport default FilteringForm\n","import React from 'react'\n\nconst Persons = ({ persons, showPerson, deletePerson }) => {\n  const containerStyles = {\n    display: 'flex',\n    marginBottom: 24\n  }\n  const paragraphStyles = {\n    flexGrow: 1,\n    margin: 0\n  }\n  const buttonStyles = {\n    flexGrow: 0\n  }\n  const boldStyles = {\n    fontWeight: 'bold'\n  }\n  return (\n    <div>\n      {persons.map(\n        (person) =>\n          showPerson(person.name) && (\n            <div style={containerStyles} key={person.id}>\n              <p style={paragraphStyles}>\n                <span style={boldStyles}>{person.name}:</span> {person.number}\n              </p>\n              <button style={buttonStyles} onClick={() => deletePerson(person.id)}>Delete</button>\n            </div>\n          )\n      )}\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ type, message }) => {\n    const TYPEERROR = 'error'\n    const TYPESUCCESS = 'success'\n    let backgroundColor = ''\n    \n    if (type === TYPEERROR) {\n        backgroundColor = '#FECBCB'\n    }\n\n    if (type === TYPESUCCESS) {\n        backgroundColor = '#D2FEDC'\n    }\n\n    const styles = {\n      position: 'fixed',\n      bottom: 10,\n      left: 10,\n      right: 10,\n      padding: 16,\n      backgroundColor: backgroundColor,\n      borderRadius: 4,\n      transition: 'all 1s ease-in-out'\n    }\n  \n    return (\n      <div style={styles}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\nimport PersonForm from './components/personForm'\nimport FilteringForm from './components/filteringForm'\nimport Persons from './components/persons'\nimport Notification from './components/notification'\n\n\nconst App = () => {\n  const containerStyles = {\n    fontFamily: 'Courier, monospace',\n    maxWidth: 320,\n    margin: '0 auto'\n  }\n\n  const TYPENONE = ''\n  const TYPEERROR = 'error'\n  const TYPESUCCESS = 'success'\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhonenumber, setNewPhonenumber] = useState('')\n  const [filteringCondition, setFilteringCondition] = useState('')\n  const [status, setStatus] = useState({ type : TYPENONE, message : '' })\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  const handleChangeFilteringCondition = (event) =>\n    setFilteringCondition(event.target.value)\n\n  const showPerson = (name) => {\n    if (!filteringCondition) return true\n    if (name.toLowerCase().includes(filteringCondition.toLowerCase()))\n      return true\n\n    return false\n  }\n\n  const handleSetNewName = (event) => setNewName(event.target.value)\n\n  const handleSetNewPhonenumber = (event) =>\n    setNewPhonenumber(event.target.value)\n\n  const handleAddNewPerson = (event) => {\n    event.preventDefault()\n\n    const person = persons.find((p) => p.name === newName)\n\n    if (!person) {\n      const newPerson = {\n        name: newName.trim(),\n        number: newPhonenumber.trim(),\n      }\n\n      personService.create(newPerson)\n        .then((response) => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewPhonenumber('')\n          setStatus({ type : TYPESUCCESS, message : 'New person was added successfully.'})\n          setTimeout(() => {\n            setStatus({ type : TYPENONE, message : ''})\n          }, 4000)\n        })\n        .catch((error) => {\n          setStatus({ type : TYPEERROR, message : error.response.data.error})\n          console.log(error.response.data.error)\n          setTimeout(() => {\n            setStatus({ type : TYPENONE, message : ''})\n          }, 4000)\n        })\n      return\n    }\n\n    if (\n      window.confirm(\n        `${newName} is already added to phonebook. Do you want to replace the old number with the new one?`\n      )\n    ) {\n      const updatedPerson = { ...person, number: newPhonenumber.trim() }\n      console.log(updatedPerson.number, updatedPerson.name, updatedPerson.id)\n      personService.update(person.id, updatedPerson)\n      .then((response) => {\n        setNewName('')\n        setNewPhonenumber('')\n        setPersons(\n          persons.map((p) => (p.id === updatedPerson.id ? updatedPerson : p))\n        )\n        setStatus({ type : TYPESUCCESS, message : `Phonenumber for ${person.name} was successfully updated`})\n        setTimeout(() => {\n          setStatus({ type : TYPENONE, message : ''})\n        }, 4000)\n      })\n      .catch((error) => {\n        setStatus({ type : TYPEERROR, message : error.response.data.error})\n        console.log(error.response.data.error)\n        setTimeout(() => {\n          setStatus({ type : TYPENONE, message : ''})\n        }, 4000)\n      })\n      return\n    }\n    setNewName('')\n    setNewPhonenumber('')\n    return\n  }\n\n  const handleDeletePerson = (id) => {\n    const person = persons.find((p) => p.id === id)\n    if (!window.confirm(`Are you sure you want to remove ${person.name}?`))\n      return\n\n    personService\n      .remove(id)\n      .then((response) => {\n        setPersons(persons.filter((p) => p.id !== id))\n        setStatus({ type : TYPESUCCESS, message : 'Person was successfully removed.'})\n        setTimeout(() => {\n          setStatus({ type : TYPENONE, message : ''})\n        }, 4000)\n      })\n      .catch((error) => {\n        setStatus({ type : TYPEERROR, message : 'There was an error deleting the person.'})\n        setTimeout(() => {\n          setStatus({ type : TYPENONE, message : ''})\n        }, 4000)\n        \n      })\n  }\n\n  return (\n    <div style={containerStyles}>\n      {status.type !== TYPENONE && <Notification type={status.type} message={status.message}/> }\n      <h1>Phonebook</h1>\n      <h2>Add person</h2>\n      <PersonForm\n        handleAddNewPerson={handleAddNewPerson}\n        handleSetNewName={handleSetNewName}\n        handleSetNewPhonenumber={handleSetNewPhonenumber}\n        newName={newName}\n        newPhonenumber={newPhonenumber}\n      />\n\n      <h2>Numbers</h2>\n      <FilteringForm\n        value={filteringCondition}\n        onChange={handleChangeFilteringCondition}\n      />\n      <Persons\n        persons={persons}\n        showPerson={showPerson}\n        deletePerson={handleDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}